/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "purpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newPurpose",
        type: "string",
      },
    ],
    name: "setPurpose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052601c60809081527f4275696c64696e6720556e73746f707061626c6520417070732121210000000060a05260009061003c90826100ee565b5034801561004957600080fd5b506101ad565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061007957607f821691505b60208210810361009957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100e957600081815260208120601f850160051c810160208610156100c65750805b601f850160051c820191505b818110156100e5578281556001016100d2565b5050505b505050565b81516001600160401b038111156101075761010761004f565b61011b816101158454610065565b8461009f565b602080601f83116001811461015057600084156101385750858301515b600019600386901b1c1916600185901b1785556100e5565b600085815260208120601f198616915b8281101561017f57888601518255948401946001909101908401610160565b508582101561019d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610520806101bc6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806370740aab1461003b578063eb68757f14610059575b600080fd5b61004361006e565b6040516100509190610281565b60405180910390f35b61006c6100673660046102b1565b6100fc565b005b6000805461007b90610362565b80601f01602080910402602001604051908101604052809291908181526020018280546100a790610362565b80156100f45780601f106100c9576101008083540402835291602001916100f4565b820191906000526020600020905b8154815290600101906020018083116100d757829003601f168201915b505050505081565b600061010882826103ea565b506101c4336040518060400160405280600e81526020016d73657420707572706f736520746f60901b8152506000805461014190610362565b80601f016020809104026020016040519081016040528092919081815260200182805461016d90610362565b80156101ba5780601f1061018f576101008083540402835291602001916101ba565b820191906000526020600020905b81548152906001019060200180831161019d57829003601f168201915b50505050506101c7565b50565b61020e8383836040516024016101df939291906104aa565b60408051601f198184030181529190526020810180516001600160e01b031663fb77226560e01b179052610213565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000815180845260005b8181101561025a5760208185018101518683018201520161023e565b8181111561026c576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102946020830184610234565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102c357600080fd5b813567ffffffffffffffff808211156102db57600080fd5b818401915084601f8301126102ef57600080fd5b8135818111156103015761030161029b565b604051601f8201601f19908116603f011681019083821181831017156103295761032961029b565b8160405282815287602084870101111561034257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061037657607f821691505b60208210810361039657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561020e57600081815260208120601f850160051c810160208610156103c35750805b601f850160051c820191505b818110156103e2578281556001016103cf565b505050505050565b815167ffffffffffffffff8111156104045761040461029b565b610418816104128454610362565b8461039c565b602080601f83116001811461044d57600084156104355750858301515b600019600386901b1c1916600185901b1785556103e2565b600085815260208120601f198616915b8281101561047c5788860151825594840194600190910190840161045d565b508582101561049a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03841681526060602082018190526000906104ce90830185610234565b82810360408401526104e08185610234565b969550505050505056fea26469706673582212205d34619dc1677c8bb04c2de078ea6c61f42d2a8f302a18823622c590459c852e64736f6c634300080f0033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourContract> {
    return super.deploy(overrides || {}) as Promise<YourContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YourContract {
    return super.attach(address) as YourContract;
  }
  connect(signer: Signer): YourContract__factory {
    return super.connect(signer) as YourContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new utils.Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourContract {
    return new Contract(address, _abi, signerOrProvider) as YourContract;
  }
}
